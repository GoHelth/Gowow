const mongoose = require('mongoose');

// ЁЯЫая╕П ╪е┘Ж╪┤╪з╪б ┘Е╪о╪╖╪╖ ╪з┘Д┘Е┘Ж╪к╪м (Schema)
const productSchema = mongoose.Schema(
    {
        name: {
            type: String,
            required: [true, 'тЪая╕П ┘К╪м╪и ╪е╪п╪о╪з┘Д ╪з╪│┘Е ╪з┘Д┘Е┘Ж╪к╪м'],
            unique: true,
            trim: true
        },
        description: {
            type: String,
            required: [true, 'тЪая╕П ┘К╪м╪и ╪е╪п╪о╪з┘Д ┘И╪╡┘Б ╪з┘Д┘Е┘Ж╪к╪м']
        },
        price: {
            type: Number,
            required: [true, 'тЪая╕П ┘К╪м╪и ╪е╪п╪о╪з┘Д ╪│╪╣╪▒ ╪з┘Д┘Е┘Ж╪к╪м'],
            min: [0, 'тЪая╕П ┘Д╪з ┘К┘Е┘Г┘Ж ╪г┘Ж ┘К┘Г┘И┘Ж ╪з┘Д╪│╪╣╪▒ ╪г┘В┘Д ┘Е┘Ж 0']
        },
        stock: {
            type: Number,
            required: [true, 'тЪая╕П ┘К╪м╪и ╪е╪п╪о╪з┘Д ╪з┘Д┘Г┘Е┘К╪й ╪з┘Д┘Е╪к╪з╪н╪й'],
            min: [0, 'тЪая╕П ┘Д╪з ┘К┘Е┘Г┘Ж ╪г┘Ж ┘К┘Г┘И┘Ж ╪з┘Д┘Е╪о╪▓┘И┘Ж ╪г┘В┘Д ┘Е┘Ж 0']
        },
        category: {
            type: String,
            required: [true, 'тЪая╕П ┘К╪м╪и ╪е╪п╪о╪з┘Д ╪к╪╡┘Ж┘К┘Б ╪з┘Д┘Е┘Ж╪к╪м']
        },
        imageUrl: {
            type: String,
            default: 'https://via.placeholder.com/150' // ╪▒╪з╪и╪╖ ╪з┘Б╪к╪▒╪з╪╢┘К ┘Д┘Д╪╡┘И╪▒╪й
        },
        createdAt: {
            type: Date,
            default: Date.now
        }
    },
    {
        timestamps: true // ╪е╪╢╪з┘Б╪й ╪к┘И┘В┘К╪к ╪з┘Д╪е┘Ж╪┤╪з╪б ┘И╪з┘Д╪к╪н╪п┘К╪л ╪к┘Д┘В╪з╪ж┘К┘Л╪з
    }
);

// ЁЯЫая╕П ╪е┘Ж╪┤╪з╪б ╪з┘Д┘Ж┘Е┘И╪░╪м ╪и┘Ж╪з╪б┘Л ╪╣┘Д┘Й ╪з┘Д┘Е╪о╪╖╪╖
const Product = mongoose.model('Product', productSchema);

// ЁЯУд ╪к╪╡╪п┘К╪▒ ╪з┘Д┘Ж┘Е┘И╪░╪м
module.exports = Product;
